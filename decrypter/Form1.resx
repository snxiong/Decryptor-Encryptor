<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAA
        ACgAAACJAAAAigAAACkAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ABsAAAB7AAAA2wAAAP4AAAD+AAAA3AAAAHsAAAAbAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAEAAABBAAAAuAAAAOwAAADuAAAA6wAAAOsAAADuAAAA7AAAALgAAABBAAAAAQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAcAAAAHAAAABwAAAAcAAAAHAAAABwAA
        AAcAAAAHAAAACQAAACkAAAA3AAAANAAAADQAAAA0AAAANAAAADQAAAA0AAAANwAAACkAAAAJAAAABwAA
        AAcAAAAHAAAABwAAAAcAAAAHAAAABwAAAAcAAAAEAAAAAAAAAFUAAACsAAAAuQAAALkAAAC5AAAAuAAA
        ALgAAAC6AAAAuAAAALgAAAC5AAAAtwAAALUAAAC2AAAAtwAAALUAAAC1AAAAtwAAALYAAAC1AAAAtwAA
        ALkAAAC4AAAAuAAAALoAAAC4AAAAuAAAALkAAAC5AAAAuQAAAKwAAABUAAAA6QAAAP8AAAD/AAAA8wAA
        APMAAAD/AAAA/AAAAOwAAAD9AAAA/wAAAPAAAAD2AAAA/wAAAPkAAADtAAAA/gAAAP8AAADuAAAA+QAA
        AP8AAAD2AAAA7wAAAP8AAAD9AAAA7QAAAPwAAAD/AAAA8wAAAPIAAAD/AAAA/wAAAOkAAAD/AAAA/wAA
        AP8AAACWAAAAVAAAAOIAAACWAAAATQAAAO0AAAD/AAAAewAAAGcAAADoAAAAfgAAAGAAAAD5AAAA+QAA
        AGMAAAB+AAAA6AAAAGcAAAB4AAAA/wAAAO4AAABQAAAAlgAAAOIAAABTAAAAkwAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAOAAAABKAAAALgAAACcAAACmAAAA/gAAAP8AAADQAAAAOQAAADAAAAAuAAAAvAAA
        AP8AAAD/AAAAvQAAAC4AAAAwAAAAOQAAANAAAAD/AAAA/gAAAKcAAAAnAAAALgAAAEoAAADgAAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/gAAAIUAAAACAAAANgAAAOIAAAD/AAAA/wAAAPkAAABpAAAAAAAA
        AE4AAADwAAAA/wAAAP8AAADwAAAATgAAAAAAAABoAAAA+AAAAP8AAAD/AAAA4wAAADYAAAACAAAAhAAA
        AP4AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAACoAAAAJgAAAJEAAABKAAAAVwAAAPQAAAD/AAAAjQAA
        ACwAAACZAAAAOAAAAHEAAAD8AAAA/AAAAHEAAAA4AAAAmQAAACwAAACMAAAA/wAAAPQAAABXAAAASgAA
        AJEAAAAmAAAAqAAAAP8AAAD/AAAA/wAAAPsAAAD/AAAA/wAAAMIAAAC1AAAA/wAAAN8AAAChAAAA9QAA
        AP8AAAC0AAAAwwAAAP8AAADSAAAAqAAAAPwAAAD8AAAAqAAAANIAAAD/AAAAwwAAALQAAAD/AAAA9QAA
        AKEAAADfAAAA/wAAALUAAADCAAAA/wAAAP8AAAD7AAAAqgAAAPQAAAD4AAAA+gAAAPsAAAD4AAAA+gAA
        APwAAAD4AAAA+AAAAPsAAAD7AAAA+AAAAPoAAAD7AAAA+AAAAPgAAAD7AAAA+gAAAPgAAAD7AAAA+wAA
        APgAAAD4AAAA/AAAAPoAAAD4AAAA+wAAAPoAAAD4AAAA9AAAAKsAAAARAAAAPQAAAEYAAABHAAAARwAA
        AEYAAABGAAAARgAAAEYAAABGAAAARgAAAEYAAABGAAAARgAAAEYAAABGAAAARgAAAEYAAABGAAAARgAA
        AEYAAABGAAAARgAAAEYAAABGAAAARgAAAEYAAABHAAAARwAAAEYAAAA9AAAAEQAAAAAAAAAAAAAAQgAA
        AG4AAAAcAAAAiAAAAJgAAACXAAAAlwAAAJcAAACXAAAAlwAAAJcAAACXAAAAlwAAAJcAAACXAAAAlwAA
        AJcAAACXAAAAlwAAAJcAAACXAAAAlwAAAJcAAACYAAAAiAAAABwAAABuAAAAQgAAAAAAAAAAAAAAAAAA
        AAMAAAClAAAAigAAAEwAAAD4AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD3AAAATAAAAIoAAACmAAAAAwAA
        AAAAAAAAAAAAGwAAAM8AAABIAAAAjwAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAACOAAAASAAA
        AM8AAAAbAAAAAAAAAAAAAABCAAAAzwAAAC0AAADIAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AMgAAAAsAAAAzwAAAEMAAAAAAAAAAAAAAG4AAACzAAAANAAAAOoAAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA6gAAADQAAACzAAAAbgAAAAAAAAAAAAAAkwAAAJAAAABNAAAA+gAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD6AAAATQAAAJAAAACTAAAAAAAAAAMAAACsAAAAcwAAAGgAAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAABoAAAAcwAAAKwAAAADAAAACQAAALoAAABfAAAAfQAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAHwAAABfAAAAugAAAAkAAAAOAAAAwQAA
        AFUAAACIAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAiAAAAFUAAADBAAAADgAA
        AA8AAADCAAAAVAAAAIoAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAACJAAAAVAAA
        AMIAAAAOAAAACwAAAL4AAABbAAAAfwAAAPsAAAD0AAAA9QAAAPoAAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA+gAAAPYAAAD1AAAA+wAA
        AH8AAABbAAAAvgAAAAsAAAAGAAAAswAAAG4AAAAhAAAARQAAAD4AAABAAAAATAAAAGgAAACYAAAA0QAA
        APgAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAPgAAADSAAAAmQAAAGkAAABMAAAAQAAA
        AD4AAABGAAAAIgAAAG4AAACzAAAABgAAAAAAAACcAAAAywAAAIkAAACbAAAApAAAAKIAAACRAAAAbgAA
        AEAAAAAoAAAAUQAAALEAAAD2AAAA/wAAAP8AAAD/AAAA/wAAAPYAAACyAAAAUgAAACkAAABAAAAAbgAA
        AJEAAACjAAAApQAAAJwAAACJAAAAywAAAJwAAAAAAAAAAAAAAGkAAADCAAAAoAAAAIoAAACAAAAAhQAA
        AJoAAAC7AAAA1gAAAMcAAAB2AAAAKAAAAFcAAADSAAAA/wAAAP8AAADTAAAAVwAAACgAAAB2AAAAxgAA
        ANYAAAC7AAAAmgAAAIUAAACAAAAAigAAAKAAAADCAAAAaQAAAAAAAAAAAAAACQAAAAkAAAABAAAAAAAA
        AAAAAAAAAAAAAAAAAAgAAAAkAAAAZgAAAMAAAADOAAAAXAAAACsAAACvAAAArwAAACwAAABcAAAAzgAA
        AMAAAABnAAAAJAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAkAAAAJAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwAAAGsAAADYAAAAjQAAAB0AAAAdAAAAjQAA
        ANgAAABrAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADgAAADJAAAAqgAA
        AKoAAADJAAAAOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ACwAAADRAAAA0AAAACwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//gf///wD///wAP/gAAAAQAAAAAAAAAAAAAAAAAAAAAACBAAAAAAAAAA
        AAAAAAAAAAAAAMAAAAOAAAABgAAAAYAAAAGAAAABgAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAA
        AAGAAAABjwAA8f/gB///+B////w////+f/8=
</value>
  </data>
</root>